apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-workflows-doc
  labels:
    app: n8n-workflows-doc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: n8n-workflows-doc
  template:
    metadata:
      labels:
        app: n8n-workflows-doc
    spec:
      containers:
      - name: workflows-doc
        image: workflows-doc:latest
        ports:
        - containerPort: 8000
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: workflows-storage
          mountPath: /app/database
      volumes:
      - name: workflows-storage
        persistentVolumeClaim:
          claimName: workflows-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: n8n-workflows-service
  labels:
    app: n8n-workflows-doc
spec:
  selector:
    app: n8n-workflows-doc
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: workflows-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: n8n-workflows-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
spec:
  ingressClassName: nginx
  rules:
  - host: workflows.yourdomain.com  # Change this to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: n8n-workflows-service
            port:
              number: 80
  # Uncomment for HTTPS
  # tls:
  # - hosts:
  #   - workflows.yourdomain.com
  #   secretName: workflows-tls-secret