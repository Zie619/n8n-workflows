apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: workflows-docs-ingress
  namespace: n8n-workflows
  labels:
    app.kubernetes.io/name: n8n-workflows-docs
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit-rps: "100"
spec:
  tls:
  - hosts:
    - workflows.yourdomain.com
    secretName: workflows-docs-tls
  rules:
  - host: workflows.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: workflows-docs-service
            port:
              number: 80
---
# Alternative Ingress for development/staging
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: workflows-docs-ingress-dev
  namespace: n8n-workflows
  labels:
    app.kubernetes.io/name: n8n-workflows-docs
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - N8N Workflows Docs'
spec:
  rules:
  - host: workflows-dev.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: workflows-docs-service
            port:
              number: 80